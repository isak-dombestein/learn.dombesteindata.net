export const cardData = [

  // =====================
  // HTML — BEGINNER
  // =====================
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Document Structure",
    title: "<!DOCTYPE>",
    content: "Declares the document type to be HTML5. It's the very first thing in your HTML file.",
    code: `<!DOCTYPE html>`,
    link: "https://www.w3schools.com/tags/tag_doctype.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Document Structure",
    title: "<html>",
    content: 'The root element of a page. The "lang" attribute is important for accessibility.',
    code: `<html lang="en">\n  <!-- Page content -->\n</html>`,
    link: "https://www.w3schools.com/tags/tag_html.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Document Structure",
    title: "<head>",
    content: "A container for metadata (data about the page), like the title, styles, and scripts.",
    code: `<head>\n  <meta charset=\"UTF-8\">\n  <title>My Page</title>\n</head>`,
    link: "https://www.w3schools.com/tags/tag_head.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Document Structure",
    title: "<body>",
    content: "Contains all the visible content of the webpage.",
    code: `<body>\n  <h1>Welcome!</h1>\n</body>`,
    link: "https://www.w3schools.com/tags/tag_body.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Semantic Layout",
    title: "<header>, <footer>, <nav>",
    content: "Semantic tags that define a header, footer, and a set of navigation links for your page.",
    code: `<header>...</header>\n<nav>...</nav>\n<footer>...</footer>`,
    link: "https://www.w3schools.com/html/html5_semantic_elements.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Text & Content",
    title: "<h1> - <h6>",
    content: "Headings for titles and sections. <h1> is the most important, <h6> is the least.",
    code: `<h1>Main Title</h1>\n<h2>Subtitle</h2>`,
    link: "https://www.w3schools.com/tags/tag_hn.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Text & Content",
    title: "<p>",
    content: "The paragraph tag, used for blocks of text.",
    code: `<p>This is a paragraph.</p>`,
    link: "https://www.w3schools.com/tags/tag_p.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Text & Content",
    title: "<a>",
    content: 'The anchor tag creates a hyperlink. `target="_blank"` opens it in a new tab.',
    code: `<a href=\"https://example.com\" target=\"_blank\">Visit Example</a>`,
    link: "https://www.w3schools.com/tags/tag_a.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Grouping Content",
    title: "<div>",
    content: "A generic block-level container used to group content for styling or layout.",
    code: `<div class=\"container\">\n  <p>Content inside</p>\n</div>`,
    link: "https://www.w3schools.com/tags/tag_div.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Grouping Content",
    title: "<span>",
    content: "A generic inline container used to group text for styling without breaking the flow.",
    code: `<p>This is <span class=\"highlight\">highlighted</span> text.</p>`,
    link: "https://www.w3schools.com/tags/tag_span.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Lists",
    title: "<ul>, <ol>, <li>",
    content: "Create lists. <ul> for unordered (bulleted), <ol> for ordered (numbered). <li> defines each item.",
    code: `<ul>\n  <li>Coffee</li>\n  <li>Tea</li>\n</ul>`,
    link: "https://www.w3schools.com/Html/html_lists.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Media",
    title: "<img>",
    content: "Embeds an image. `src` is the path, and `alt` provides essential alternative text for accessibility.",
    code: `<img src=\"image.jpg\" alt=\"A description of the image\">`,
    link: "https://www.w3schools.com/tags/tag_img.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Forms",
    title: "<form>",
    content: "A container for user input elements like text fields, checkboxes, and buttons.",
    code: `<form action=\"/submit\">\n  ...\n</form>`,
    link: "https://www.w3schools.com/tags/tag_form.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Forms",
    title: "<input>",
    content: "The primary form element for user input. The `type` attribute is crucial (e.g., text, password, email).",
    code: `<label for=\"name\">Name:</label>\n<input type=\"text\" id=\"name\">`,
    link: "https://www.w3schools.com/tags/tag_input.asp",
  },
  {
    level: "Beginner",
    category: "HTML",
    subcategory: "Forms",
    title: "<button>",
    content: "A clickable button, often used to submit a form or trigger a JavaScript action.",
    code: `<button type=\"submit\">Submit</button>`,
    link: "https://www.w3schools.com/tags/tag_button.asp",
  },

  // =====================
  // HTML — INTERMEDIATE
  // =====================
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Semantic Layout",
    title: "<main>",
    content: "Represents the dominant content of the document.",
    code: `<main>\n  <article>...</article>\n</main>`,
    link: "https://www.w3schools.com/tags/tag_main.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Semantic Layout",
    title: "<section> & <article>",
    content: "Sectioning content for thematic grouping and self-contained articles.",
    code: `<section>\n  <article>Post</article>\n</section>`,
    link: "https://www.w3schools.com/tags/tag_section.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Semantic Layout",
    title: "<aside>",
    content: "Content indirectly related to the main content (like sidebars).",
    code: `<aside>Related links</aside>`,
    link: "https://www.w3schools.com/tags/tag_aside.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Metadata",
    title: "<meta>, <link>, <base>, <style>, <script>",
    content: "Head metadata: meta information, external resources, base URL, embedded styles, and scripts.",
    code: `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"styles.css\">`,
    link: "https://www.w3schools.com/tags/ref_byfunc.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Tables",
    title: "<table> + friends",
    content: "Tabular data with <thead>, <tbody>, <tfoot>, <tr>, <th>, <td>, <caption>, <col>, <colgroup>.",
    code: `<table>\n  <caption>Scores</caption>\n  <thead><tr><th>Name</th><th>Pts</th></tr></thead>\n  <tbody><tr><td>Ada</td><td>42</td></tr></tbody>\n</table>`,
    link: "https://www.w3schools.com/html/html_tables.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Forms (Advanced)",
    title: "<label>, <textarea>, <select>, <option>",
    content: "Form controls beyond input: labels, text areas, and dropdowns.",
    code: `<label>Msg</label>\n<textarea></textarea>\n<select><option>A</option></select>`,
    link: "https://www.w3schools.com/html/html_forms.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Forms (Advanced)",
    title: "<fieldset>, <legend>, <datalist>, <output>, <progress>, <meter>",
    content: "Grouping controls and output/measurement widgets.",
    code: `<fieldset><legend>Info</legend>...</fieldset>`,
    link: "https://www.w3schools.com/tags/ref_byfunc.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Media & Embeds",
    title: "<audio>, <video>, <source>, <track>",
    content: "Media elements with captions/subtitles via <track>.",
    code: `<video controls>\n  <source src=\"clip.mp4\" type=\"video/mp4\">\n  <track kind=\"captions\" src=\"subs.vtt\">\n</video>`,
    link: "https://www.w3schools.com/html/html5_video.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Media & Embeds",
    title: "<picture>, <map>, <area>, <iframe>",
    content: "Responsive images with <picture>; image maps and inline frames.",
    code: `<picture>\n  <source media=\"(min-width: 800px)\" srcset=\"large.jpg\">\n  <img src=\"small.jpg\" alt=\"\">\n</picture>`,
    link: "https://www.w3schools.com/tags/tag_picture.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Figures",
    title: "<figure> & <figcaption>",
    content: "Associate an image/illustration with a caption.",
    code: `<figure>\n  <img src=\"chart.png\" alt=\"\">\n  <figcaption>Quarterly growth</figcaption>\n</figure>`,
    link: "https://www.w3schools.com/tags/tag_figcaption.asp",
  },
  {
    level: "Intermediate",
    category: "HTML",
    subcategory: "Scripting Support",
    title: "<noscript>",
    content: "Fallback content shown when scripts are disabled.",
    code: `<noscript>Please enable JavaScript</noscript>`,
    link: "https://www.w3schools.com/tags/tag_noscript.asp",
  },

  // =====================
  // HTML — ADVANCED
  // =====================
  {
    level: "Advanced",
    category: "HTML",
    subcategory: "Interactive",
    title: "<details> & <summary>",
    content: "Disclosure widgets for expandable content.",
    code: `<details>\n  <summary>More</summary>\n  Hidden text...\n</details>`,
    link: "https://www.w3schools.com/tags/tag_details.asp",
  },
  {
    level: "Advanced",
    category: "HTML",
    subcategory: "Interactive",
    title: "<dialog>",
    content: "Native modal dialog element.",
    code: `<dialog open>Hi!</dialog>`,
    link: "https://www.w3schools.com/tags/tag_dialog.asp",
  },
  {
    level: "Advanced",
    category: "HTML",
    subcategory: "Templates & Web Components",
    title: "<template> & <slot>",
    content: "Template fragments and slots for custom elements.",
    code: `<template id=\"tpl\"><p>Hi</p></template>`,
    link: "https://www.w3schools.com/tags/tag_template.asp",
  },
  {
    level: "Advanced",
    category: "HTML",
    subcategory: "Graphics",
    title: "<canvas> & <svg>",
    content: "2D drawing with Canvas and vector graphics with SVG.",
    code: `<canvas id=\"c\"></canvas>\n<svg width=\"100\" height=\"100\"><circle cx=\"50\" cy=\"50\" r=\"40\"/></svg>`,
    link: "https://www.w3schools.com/html/html5_canvas.asp",
  },

  // =====================
  // CSS — BEGINNER
  // =====================
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Selectors",
    title: "Class & ID Selectors",
    content: "Use `.class` to target multiple elements, and `#id` to target one unique element.",
    code: `.my-class { color: blue; }\n#my-id { font-weight: bold; }`,
    link: "https://www.w3schools.com/css/css_selectors.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Selectors",
    title: "Pseudo-classes",
    content: "Select elements in a specific state, like `:hover` (mouse over) or `:first-child`.",
    code: `a:hover {\n  text-decoration: underline;\n}`,
    link: "https://www.w3schools.com/css/css_pseudo_classes.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Box Model",
    title: "Margin & Padding",
    content: "`margin` is the space outside an element's border. `padding` is the space inside.",
    code: `.box {\n  margin: 20px;\n  padding: 10px;\n}`,
    link: "https://www.w3schools.com/css/css_boxmodel.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Box Model",
    title: "Width, Height, Border",
    content: "Define the dimensions and border of an element.",
    code: `.box {\n  width: 100px;\n  height: 100px;\n  border: 1px solid black;\n}`,
    link: "https://www.w3schools.com/css/css_border.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Layout",
    title: "Display",
    content: "Controls how an element is displayed. Common values are `block`, `inline`, `flex`, `grid`, and `none`.",
    code: `span { display: block; }`,
    link: "https://www.w3schools.com/css/css_display_visibility.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Layout",
    title: "Position",
    content: "Controls the positioning of an element. `relative`, `absolute`, `fixed`, `sticky` are key values.",
    code: `.modal {\n  position: fixed;\n  top: 0; left: 0;\n}`,
    link: "https://www.w3schools.com/css/css_positioning.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Layout",
    title: "Flexbox",
    content: "A layout model for aligning items in a 1D row or column. Essential for modern layouts.",
    code: `.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}`,
    link: "https://www.w3schools.com/css/css3_flexbox.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Layout",
    title: "Grid",
    content: "A layout model for aligning items in a 2D grid of rows and columns.",
    code: `.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1rem;\n}`,
    link: "https://www.w3schools.com/css/css_grid.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Typography",
    title: "Font Family & Font Size",
    content: "Controls the typeface and size of the text.",
    code: `body {\n  font-family: Arial, sans-serif;\n  font-size: 16px;\n}`,
    link: "https://www.w3schools.com/cssref/pr_font_font-family.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Typography",
    title: "Color & Font Weight",
    content: "Sets the text color and its thickness (e.g., `normal` or `bold`).",
    code: `p {\n  color: #333;\n  font-weight: bold;\n}`,
    link: "https://www.w3schools.com/cssref/pr_text_color.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Styling & Effects",
    title: "Background Color",
    content: "Sets the background color of an element.",
    code: `div { background-color: #f0f0f0; }`,
    link: "https://www.w3schools.com/cssref/pr_background-color.asp",
  },
  {
    level: "Beginner",
    category: "CSS",
    subcategory: "Styling & Effects",
    title: "Border Radius",
    content: "Rounds the corners of an element's border.",
    code: `.card { border-radius: 8px; }`,
    link: "https://www.w3schools.com/css/css3_borders.asp",
  },

  // =====================
  // CSS — INTERMEDIATE
  // =====================
  {
    level: "Intermediate",
    category: "CSS",
    subcategory: "Selectors (Advanced)",
    title: ":nth-child(), :not(), :is(), :has()",
    content: "Powerful selectors for complex matching and cleaner CSS.",
    code: `li:nth-child(2n) { background: #111; }\n.card:has(img) { border: 1px solid #444; }`,
    link: "https://www.w3schools.com/css/css_pseudo_class.asp",
  },
  {
    level: "Intermediate",
    category: "CSS",
    subcategory: "Units",
    title: "em, rem, %, vw, vh, svh, dvh, fr",
    content: "Responsive sizing units for typography and layout.",
    code: `h1 { font-size: 2rem; }\n.container { grid-template-columns: 1fr 2fr; }`,
    link: "https://www.w3schools.com/cssref/css_units.php",
  },
  {
    level: "Intermediate",
    category: "CSS",
    subcategory: "Color Systems",
    title: "rgb(), hsl(), lab(), lch()",
    content: "Modern color notations for better control and gamut.",
    code: `.accent { color: hsl(280 80% 65%); }`,
    link: "https://www.w3schools.com/cssref/func_hsl.php",
  },
  {
    level: "Intermediate",
    category: "CSS",
    subcategory: "Functions",
    title: "calc(), clamp(), min(), max(), var()",
    content: "Compose responsive values and use custom properties.",
    code: `.title { font-size: clamp(1rem, 2vw + 1rem, 2rem); }`,
    link: "https://www.w3schools.com/cssref/func_calc.php",
  },
  {
    level: "Intermediate",
    category: "CSS",
    subcategory: "Transitions & Transforms",
    title: "transition, transform",
    content: "Animate property changes smoothly; move/scale/rotate elements.",
    code: `.btn { transition: background-color .3s ease; }\n.btn:hover { transform: translateY(-2px); }`,
    link: "https://www.w3schools.com/css/css3_transitions.asp",
  },
  {
    level: "Intermediate",
    category: "CSS",
    subcategory: "Shadows & Filters",
    title: "box-shadow, text-shadow, filter",
    content: "Depth, focus, and image effects.",
    code: `.card { box-shadow: 0 8px 24px rgba(0,0,0,.2); }\n.blur { filter: blur(4px); }`,
    link: "https://www.w3schools.com/cssref/css3_pr_box-shadow.php",
  },
  {
    level: "Intermediate",
    category: "CSS",
    subcategory: "Responsive",
    title: "@media queries",
    content: "Adapt styles to screen sizes and user preferences.",
    code: `@media (max-width: 600px) { .grid { grid-template-columns: 1fr; } }`,
    link: "https://www.w3schools.com/css/css_rwd_mediaqueries.asp",
  },

  // =====================
  // CSS — ADVANCED
  // =====================
  {
    level: "Advanced",
    category: "CSS",
    subcategory: "Grid (Advanced)",
    title: "minmax(), auto-fit/auto-fill, named areas",
    content: "Create fluid, powerful grids with intrinsic sizing.",
    code: `.grid { grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }`,
    link: "https://www.w3schools.com/css/css_grid.asp",
  },
  {
    level: "Advanced",
    category: "CSS",
    subcategory: "Blend & Mask",
    title: "mix-blend-mode, clip-path, mask-image",
    content: "Advanced composition and masking techniques.",
    code: `.overlay { mix-blend-mode: screen; }\n.shape { clip-path: circle(50%); }`,
    link: "https://www.w3schools.com/cssref/pr_mix-blend-mode.php",
  },
  {
    level: "Advanced",
    category: "CSS",
    subcategory: "Animations",
    title: "@keyframes & animation",
    content: "Create timeline animations with keyframes.",
    code: `@keyframes pulse { 0%{opacity:.6} 50%{opacity:1} 100%{opacity:.6} }\n.badge{ animation: pulse 2s infinite; }`,
    link: "https://www.w3schools.com/css/css3_animations.asp",
  },
  {
    level: "Advanced",
    category: "CSS",
    subcategory: "Custom Properties",
    title: "CSS Variables",
    content: "Define theme tokens and reuse values across styles.",
    code: `:root { --brand: hsl(270 90% 65%); }\n.btn{ background: var(--brand); }`,
    link: "https://www.w3schools.com/css/css3_variables.asp",
  },

  // =====================
  // JAVASCRIPT — BEGINNER
  // =====================
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Core Concepts",
    title: "Variables (const, let)",
    content: "Use `const` for constants and `let` for variables that can be reassigned. Avoid `var`.",
    code: `const name = "Basia"; // Cannot be changed\nlet score = 100; // Can be changed`,
    link: "https://www.w3schools.com/js/js_variables.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Core Concepts",
    title: "Functions",
    content: "A reusable block of code that performs a task. Can take arguments and return a value.",
    code: `function greet(name) {\n  return \`Hello, \${name}!\`;\n}`,
    link: "https://www.w3schools.com/js/js_functions.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Core Concepts",
    title: "Operators",
    content: "Symbols that perform operations, like `+` (addition), `===` (strict equality), and `&&` (logical AND).",
    code: `let sum = 5 + 10; // 15\nif (age > 18 && isStudent) { /* ... */ }`,
    link: "https://www.w3schools.com/js/js_operators.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Data Types",
    title: "String, Number, Boolean",
    content: "The three primary data types: text (\'hello\'), numbers (42), and true/false values.",
    code: `const greeting = "Hello";\nconst year = 2025;\nconst isReady = true;`,
    link: "https://www.w3schools.com/js/js_datatypes.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Data Types",
    title: "Arrays",
    content: "An ordered list of values. Access items by their index (starting from 0).",
    code: `const fruits = ["Apple", "Banana", "Cherry"];\nconsole.log(fruits[1]); // "Banana"`,
    link: "https://www.w3schools.com/js/js_arrays.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Data Types",
    title: "Objects",
    content: "A collection of key-value pairs, used to group related data.",
    code: `const user = {\n  name: "Basia",\n  isStudent: true\n};\nconsole.log(user.name); // "Basia"`,
    link: "https://www.w3schools.com/js/js_objects.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Control Flow",
    title: "If / Else",
    content: "Executes code conditionally. Runs one block of code if a condition is true, and another if it's false.",
    code: `if (score > 50) {\n  console.log("You passed!");\n} else {\n  console.log("Try again.");\n}`,
    link: "https://www.w3schools.com/js/js_if_else.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Control Flow",
    title: "For-Loop",
    content: "Repeats a block of code a specific number of times. Great for iterating over arrays.",
    code: `for (let i = 0; i < fruits.length; i++) {\n  console.log(fruits[i]);\n}`,
    link: "https://www.w3schools.com/js/js_loop_for.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "DOM Manipulation",
    title: "Document QuerySelector",
    content: "Selects the first element in the document that matches a CSS selector.",
    code: `const button = document.querySelector('#my-button');`,
    link: "https://www.w3schools.com/jsref/met_document_queryselector.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "DOM Manipulation",
    title: "Text Content & Style",
    content: "Change the text content or the CSS styles of a selected element.",
    code: `const h = document.querySelector('h1');\nh.textContent = 'New Title';\nh.style.color = 'red';`,
    link: "https://www.w3schools.com/jsref/prop_node_textcontent.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "DOM Manipulation",
    title: "ClassList Toggle",
    content: "Adds a CSS class if it's not present, or removes it if it is. Perfect for toggles.",
    code: `document.body.classList.toggle('dark-mode');`,
    link: "https://www.w3schools.com/jsref/prop_element_classlist.asp",
  },
  {
    level: "Beginner",
    category: "JavaScript",
    subcategory: "Events",
    title: "Event Listener",
    content: "Attach a function to run when a specific event occurs.",
    code: `button.addEventListener('click', () => {\n  console.log('Button clicked!');\n});`,
    link: "https://www.w3schools.com/jsref/met_element_addeventlistener.asp",
  },

  // =====================
  // JAVASCRIPT — INTERMEDIATE
  // =====================
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "ES6+",
    title: "Template Literals & Destructuring",
    content: "Cleaner strings and easy object/array unpacking.",
    code: `const user = { name: 'Basia', role: 'student' };\nconst { name } = user;\nconsole.log(` + "`Hello ${name}!`" + `);`,
    link: "https://www.w3schools.com/js/js_es6.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "ES6+",
    title: "Spread & Rest",
    content: "Copy/merge arrays & objects; gather remaining args.",
    code: `const a = [1,2]; const b = [...a, 3];\nfunction sum(...nums){ return nums.reduce((s,n)=>s+n,0); }`,
    link: "https://www.w3schools.com/js/js_es6.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "Functions",
    title: "Arrow Functions & Defaults",
    content: "Concise function syntax and default parameters.",
    code: `const greet = (n = 'world') => 'Hi ' + n;`,
    link: "https://www.w3schools.com/js/js_arrow_function.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "Arrays",
    title: "map, filter, reduce, find",
    content: "Transform, select, and aggregate array data.",
    code: `const total = [1,2,3].reduce((s,n)=>s+n,0);`,
    link: "https://www.w3schools.com/js/js_array_iteration.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "Objects",
    title: "Object.keys/values/entries",
    content: "Iterate over object properties and values.",
    code: `for (const [k,v] of Object.entries({a:1,b:2})) { console.log(k,v); }`,
    link: "https://www.w3schools.com/jsref/jsref_object_entries.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "Strings",
    title: "includes, slice, replace",
    content: "Common string utilities for search and manipulation.",
    code: `'hello'.includes('he');`,
    link: "https://www.w3schools.com/js/js_string_methods.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "Dates & Math",
    title: "Date & Math Basics",
    content: "Work with time and numeric utilities.",
    code: `new Date().toISOString();\nMath.round(3.6);`,
    link: "https://www.w3schools.com/js/js_dates.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "JSON",
    title: "JSON.parse & JSON.stringify",
    content: "Convert between strings and JS objects.",
    code: `const s = JSON.stringify({a:1});\nconst o = JSON.parse(s);`,
    link: "https://www.w3schools.com/js/js_json.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "Errors",
    title: "try / catch / finally",
    content: "Handle exceptions gracefully.",
    code: `try { risky(); } catch(e) { console.error(e); } finally { cleanup(); }`,
    link: "https://www.w3schools.com/js/js_errors.asp",
  },
  {
    level: "Intermediate",
    category: "JavaScript",
    subcategory: "Timers",
    title: "setTimeout & setInterval",
    content: "Schedule functions and create intervals.",
    code: `const id = setInterval(()=>console.log('tick'),1000);`,
    link: "https://www.w3schools.com/jsref/met_win_settimeout.asp",
  },

  // =====================
  // JAVASCRIPT — ADVANCED
  // =====================
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Classes",
    title: "class / extends / super",
    content: "Define blueprints and inherit behavior.",
    code: `class Animal{ speak(){console.log('...')} }\nclass Dog extends Animal{ speak(){console.log('woof')} }`,
    link: "https://www.w3schools.com/js/js_classes.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Modules",
    title: "import / export",
    content: "Split code across files and share symbols.",
    code: `// a.js\nexport const n=1;\n// b.js\nimport { n } from './a.js';`,
    link: "https://www.w3schools.com/js/js_modules.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Async",
    title: "Promise & async/await",
    content: "Work with asynchronous tasks and network calls.",
    code: `async function load(){ const r = await fetch('/api'); return r.json(); }`,
    link: "https://www.w3schools.com/js/js_async.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Storage & Web APIs",
    title: "localStorage / sessionStorage",
    content: "Persist small amounts of data in the browser.",
    code: `localStorage.setItem('k','v');\nlocalStorage.getItem('k');`,
    link: "https://www.w3schools.com/jsref/prop_win_localstorage.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Data Structures",
    title: "Map, Set, WeakMap, WeakSet",
    content: "Modern collections for keys and unique values.",
    code: `const m=new Map([[1,'a']]); const s=new Set([1,2,2]);`,
    link: "https://www.w3schools.com/js/js_maps.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Functions",
    title: "Closures & Higher-Order Functions",
    content: "Functions that return functions and capture scope.",
    code: `function makeAdder(x){ return y=>x+y; }`,
    link: "https://www.w3schools.com/js/js_function_closures.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "RegExp",
    title: "Regular Expressions",
    content: "Match patterns in strings.",
    code: `/\b[a-z]+\b/i.test('Hello'); // true`,
    link: "https://www.w3schools.com/js/js_regexp.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Event Loop",
    title: "Call Stack & Microtasks",
    content: "Understand how JS schedules tasks and renders.",
    code: `queueMicrotask(()=>console.log('micro')); console.log('sync');`,
    link: "https://www.w3schools.com/js/js_htmldom_async.asp",
  },
  {
    level: "Advanced",
    category: "JavaScript",
    subcategory: "Web APIs",
    title: "Geolocation, Canvas, WebSockets",
    content: "Browser APIs for location, graphics, realtime.",
    code: `navigator.geolocation.getCurrentPosition(pos=>console.log(pos));`,
    link: "https://www.w3schools.com/js/js_api_intro.asp",
  },
];