export const cardData = [
	// =========================================================================
	// HTML
	// =========================================================================
	{
		category: "HTML",
		subcategory: "Document Structure",
		title: "<!DOCTYPE>",
		content: "Declares the document type to be HTML5. It's the very first thing in your HTML file.",
		code: `<!DOCTYPE html>`,
		link: "https://www.w3schools.com/tags/tag_doctype.asp",
	},
	{
		category: "HTML",
		subcategory: "Document Structure",
		title: "<html>",
		content: 'The root element of a page. The "lang" attribute is important for accessibility.',
		code: `<html lang="en">\n  <!-- Page content -->\n</html>`,
		link: "https://www.w3schools.com/tags/tag_html.asp",
	},
	{
		category: "HTML",
		subcategory: "Document Structure",
		title: "<head>",
		content: "A container for metadata (data about the page), like the title, styles, and scripts.",
		code: `<head>\n  <meta charset="UTF-8">\n  <title>My Page</title>\n</head>`,
		link: "https://www.w3schools.com/tags/tag_head.asp",
	},
	{
		category: "HTML",
		subcategory: "Document Structure",
		title: "<body>",
		content: "Contains all the visible content of the webpage.",
		code: `<body>\n  <h1>Welcome!</h1>\n</body>`,
		link: "https://www.w3schools.com/tags/tag_body.asp",
	},
	{
		category: "HTML",
		subcategory: "Semantic Layout",
		title: "<header>, <footer>, <nav>",
		content: "Semantic tags that define a header, footer, and a set of navigation links for your page.",
		code: `<header>...</header>\n<nav>...</nav>\n<footer>...</footer>`,
		link: "https://www.w3schools.com/html/html5_semantic_elements.asp",
	},
	{
		category: "HTML",
		subcategory: "Text & Content",
		title: "<h1> - <h6>",
		content: "Headings for titles and sections. <h1> is the most important, <h6> is the least.",
		code: `<h1>Main Title</h1>\n<h2>Subtitle</h2>`,
		link: "https://www.w3schools.com/tags/tag_hn.asp",
	},
	{
		category: "HTML",
		subcategory: "Text & Content",
		title: "<p>",
		content: "The paragraph tag, used for blocks of text.",
		code: `<p>This is a paragraph.</p>`,
		link: "https://www.w3schools.com/tags/tag_p.asp",
	},
	{
		category: "HTML",
		subcategory: "Text & Content",
		title: "<a>",
		content: 'The anchor tag creates a hyperlink. `target="_blank"` opens it in a new tab.',
		code: `<a href="https://example.com" target="_blank">Visit Example</a>`,
		link: "https://www.w3schools.com/tags/tag_a.asp",
	},
	{
		category: "HTML",
		subcategory: "Grouping Content",
		title: "<div>",
		content: "A generic block-level container used to group content for styling or layout.",
		code: `<div class="container">\n  <p>Content inside</p>\n</div>`,
		link: "https://www.w3schools.com/tags/tag_div.asp",
	},
	{
		category: "HTML",
		subcategory: "Grouping Content",
		title: "<span>",
		content: "A generic inline container used to group text for styling without breaking the flow.",
		code: `<p>This is <span class="highlight">highlighted</span> text.</p>`,
		link: "https://www.w3schools.com/tags/tag_span.asp",
	},
	{
		category: "HTML",
		subcategory: "Lists",
		title: "<ul>, <ol>, <li>",
		content: "Create lists. <ul> for unordered (bulleted), <ol> for ordered (numbered). <li> defines each item.",
		code: `<ul>\n  <li>Coffee</li>\n  <li>Tea</li>\n</ul>`,
		link: "https://www.w3schools.com/Html/html_lists.asp",
	},
	{
		category: "HTML",
		subcategory: "Media",
		title: "<img>",
		content: "Embeds an image. `src` is the path, and `alt` provides essential alternative text for accessibility.",
		code: `<img src="image.jpg" alt="A description of the image">`,
		link: "https://www.w3schools.com/tags/tag_img.asp",
	},
	{
		category: "HTML",
		subcategory: "Forms",
		title: "<form>",
		content: "A container for user input elements like text fields, checkboxes, and buttons.",
		code: `<form action="/submit">\n  ...\n</form>`,
		link: "https://www.w3schools.com/tags/tag_form.asp",
	},
	{
		category: "HTML",
		subcategory: "Forms",
		title: "<input>",
		content: "The primary form element for user input. The `type` attribute is crucial (e.g., text, password, email).",
		code: `<label for="name">Name:</label>\n<input type="text" id="name">`,
		link: "https://www.w3schools.com/tags/tag_input.asp",
	},
	{
		category: "HTML",
		subcategory: "Forms",
		title: "<button>",
		content: "A clickable button, often used to submit a form or trigger a JavaScript action.",
		code: `<button type="submit">Submit</button>`,
		link: "https://www.w3schools.com/tags/tag_button.asp",
	},

	// =========================================================================
	// CSS
	// =========================================================================
	{
		category: "CSS",
		subcategory: "Selectors",
		title: "Class & ID Selectors",
		content: "Use `.class` to target multiple elements, and `#id` to target one unique element.",
		code: `.my-class { color: blue; }\n#my-id { font-weight: bold; }`,
		link: "https://www.w3schools.com/css/css_selectors.asp",
	},
	{
		category: "CSS",
		subcategory: "Selectors",
		title: "Pseudo-classes",
		content: "Select elements in a specific state, like `:hover` (mouse over) or `:first-child`.",
		code: `a:hover {\n  text-decoration: underline;\n}`,
		link: "https://www.w3schools.com/css/css_pseudo_classes.asp",
	},
	{
		category: "CSS",
		subcategory: "Box Model",
		title: "margin & padding",
		content: "`margin` is the space outside an element's border. `padding` is the space inside.",
		code: `.box {\n  margin: 20px;\n  padding: 10px;\n}`,
		link: "https://www.w3schools.com/css/css_boxmodel.asp",
	},
	{
		category: "CSS",
		subcategory: "Box Model",
		title: "width, height, border",
		content: "Define the dimensions and border of an element.",
		code: `.box {\n  width: 100px;\n  height: 100px;\n  border: 1px solid black;\n}`,
		link: "https://www.w3schools.com/css/css_border.asp",
	},
	{
		category: "CSS",
		subcategory: "Layout",
		title: "display",
		content: "Controls how an element is displayed. Common values are `block`, `inline`, `flex`, `grid`, and `none`.",
		code: `span { display: block; }`,
		link: "https://www.w3schools.com/css/css_display_visibility.asp",
	},
	{
		category: "CSS",
		subcategory: "Layout",
		title: "Flexbox",
		content: "A layout model for aligning items in a 1D row or column. Essential for modern layouts.",
		code: `.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}`,
		link: "https://www.w3schools.com/css/css3_flexbox.asp",
	},
	{
		category: "CSS",
		subcategory: "Layout",
		title: "Grid",
		content: "A layout model for aligning items in a 2D grid of rows and columns.",
		code: `.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1rem;\n}`,
		link: "https://www.w3schools.com/css/css_grid.asp",
	},
	{
		category: "CSS",
		subcategory: "Layout",
		title: "position",
		content: "Controls the positioning of an element. `relative`, `absolute`, and `fixed` are key values.",
		code: `.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n}`,
		link: "https://www.w3schools.com/css/css_positioning.asp",
	},
	{
		category: "CSS",
		subcategory: "Typography",
		title: "font-family & font-size",
		content: "Controls the typeface and size of the text.",
		code: `body {\n  font-family: Arial, sans-serif;\n  font-size: 16px;\n}`,
		link: "https://www.w3schools.com/cssref/pr_font_font-family.asp",
	},
	{
		category: "CSS",
		subcategory: "Typography",
		title: "color & font-weight",
		content: "Sets the text color and its thickness (e.g., `normal` or `bold`).",
		code: `p {\n  color: #333;\n  font-weight: bold;\n}`,
		link: "https://www.w3schools.com/cssref/pr_text_color.asp",
	},
	{
		category: "CSS",
		subcategory: "Styling & Effects",
		title: "background-color",
		content: "Sets the background color of an element.",
		code: `div { background-color: #f0f0f0; }`,
		link: "https://www.w3schools.com/cssref/pr_background-color.asp",
	},
	{
		category: "CSS",
		subcategory: "Styling & Effects",
		title: "border-radius",
		content: "Rounds the corners of an element's border.",
		code: `.card { border-radius: 8px; }`,
		link: "https://www.w3schools.com/css/css3_borders.asp",
	},

	// =========================================================================
	// JavaScript
	// =========================================================================
	{
		category: "JavaScript",
		subcategory: "Core Concepts",
		title: "Variables (const, let)",
		content: "Use `const` for constants and `let` for variables that can be reassigned. Avoid `var`.",
		code: `const name = "Isak"; // Cannot be changed\nlet score = 100; // Can be changed`,
		link: "https://www.w3schools.com/js/js_variables.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Core Concepts",
		title: "Functions",
		content: "A reusable block of code that performs a task. Can take arguments and return a value.",
		code: `function greet(name) {\n  return \`Hello, \${name}!\`;\n}`,
		link: "https://www.w3schools.com/js/js_functions.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Core Concepts",
		title: "Operators",
		content: "Symbols that perform operations, like `+` (addition), `===` (strict equality), and `&&` (logical AND).",
		code: `let sum = 5 + 10; // 15\nif (age > 18 && isStudent) { ... }`,
		link: "https://www.w3schools.com/js/js_operators.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Data Types",
		title: "String, Number, Boolean",
		content: "The three primary data types: text (`'hello'`), numbers (`42`), and true/false values.",
		code: `const greeting = "Hello";\nconst year = 2025;\nconst isReady = true;`,
		link: "https://www.w3schools.com/js/js_datatypes.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Data Types",
		title: "Arrays",
		content: "An ordered list of values. Access items by their index (starting from 0).",
		code: `const fruits = ["Apple", "Banana", "Cherry"];\nconsole.log(fruits[1]); // "Banana"`,
		link: "https://www.w3schools.com/js/js_arrays.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Data Types",
		title: "Objects",
		content: "A collection of key-value pairs, used to group related data.",
		code: `const user = {\n  name: "Isak",\n  isStudent: true\n};\nconsole.log(user.name); // "Isak"`,
		link: "https://www.w3schools.com/js/js_objects.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Control Flow",
		title: "if / else",
		content: "Executes code conditionally. Runs one block of code if a condition is true, and another if it's false.",
		code: `if (score > 50) {\n  console.log("You passed!");\n} else {\n  console.log("Try again.");\n}`,
		link: "https://www.w3schools.com/js/js_if_else.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Control Flow",
		title: "for Loop",
		content: "Repeats a block of code a specific number of times. Great for iterating over arrays.",
		code: `for (let i = 0; i < fruits.length; i++) {\n  console.log(fruits[i]);\n}`,
		link: "https://www.w3schools.com/js/js_loop_for.asp",
	},
	{
		category: "JavaScript",
		subcategory: "DOM Manipulation",
		title: "document.querySelector",
		content: "Selects the first element in the document that matches a CSS selector.",
		code: `const button = document.querySelector('#my-button');`,
		link: "https://www.w3schools.com/jsref/met_document_queryselector.asp",
	},
	{
		category: "JavaScript",
		subcategory: "DOM Manipulation",
		title: ".textContent & .style",
		content: "Change the text content or the CSS styles of a selected element.",
		code: `const heading = document.querySelector('h1');\nheading.textContent = 'New Title';\nheading.style.color = 'red';`,
		link: "https://www.w3schools.com/jsref/prop_node_textcontent.asp",
	},
	{
		category: "JavaScript",
		subcategory: "DOM Manipulation",
		title: ".classList.toggle()",
		content: "Adds a CSS class if it's not present, or removes it if it is. Perfect for toggles.",
		code: `document.body.classList.toggle('dark-mode');`,
		link: "https://www.w3schools.com/jsref/prop_element_classlist.asp",
	},
	{
		category: "JavaScript",
		subcategory: "Events",
		title: "addEventListener",
		content: "Attaches a function (an 'event listener') to an element that runs when a specific event occurs.",
		code: `button.addEventListener('click', () => {\n  console.log('Button was clicked!');\n});`,
		link: "https://www.w3schools.com/jsref/met_element_addeventlistener.asp",
	},
];